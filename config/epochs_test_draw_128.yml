test_root   : 'epochs_draw_128'
dim         : 128
num_classes : 2
num_iters   : 5

observed_set  : {
  root            : 'qd_shapes',
  imgs_per_class  : 25000,
  sources         : ['full_binary_circle.bin','full_binary_square.bin'],
  sources_url     : 'https://console.cloud.google.com/storage/quickdraw_dataset/full/binary/', 
  min_sz          : 30
}

coverage_set : {
  root : 'sd_shapes',
  imgs_per_class : 5000,  
  draw_limits    : {sz_lo : 30, sz_hi : 120, br_lo : 100, br_hi : 255, th  : 5}
}

encoders : {

    set01 : {
      root : 'encoders_vgg',
      nets : {
          VGG05: {
              head : ['64', 'M', '128', 'M'],
              tail : ['128', '64']
          },        
          VGG07: {
              head : ['64', 'M', '128', 'M', '256', '256', 'M'],
              tail : ['256', '128']
          },
          VGG09: {
              head : ['64', 'M', '128', 'M', '256', '256', 'M', '512', '512', 'M'],
              tail : ['512', '256']
          },
          VGG11: {
              head : ['64', 'M', '128', 'M', '256', '256', 'M', '512', '512', 'M', '512', '512', 'M'],
              tail : ['2048', '1024']
          },
          VGG13: {
              head : ['64', '64', 'M', '128', '128', 'M', '256', '256', 'M', '512', '512', 'M', '512', '512', 'M'],              
              tail : ['2048', '1024']
          }        
      },

      train : {
        epochs: 5,
        log_interval: 20,
        batch_size: 32,
        optimizer : { 
            optim : 'Adam',
            lr : 1e-4,        
        }
      }
    },

    set02 : {
      root : 'encoders_vgg_bn',
      nets : {
          VGG05BN: {
              head : ['64#BN', 'M', '128#BN', 'M'],
              tail : ['128', '64']
          },        
          VGG07BN: {
              head : ['64#BN', 'M', '128#BN', 'M', '256#BN', '256#BN', 'M'],
              tail : ['256', '128']
          },
          VGG09BN: {
              head : ['64#BN', 'M', '128#BN', 'M', '256#BN', '256#BN', 'M', '512#BN', '512#BN', 'M'],
              tail : ['2048', '1024']
          },
          VGG11BN: {
              head : ['64#BN', 'M', '128#BN', 'M', '256#BN', '256#BN', 'M', '512#BN', '512#BN', 'M', '512#BN', '512#BN', 'M'],
              tail : ['2048', '1024']
          },
          VGG13BN: {
              head : ['64#BN', '64#BN', 'M', '128#BN', '128#BN', 'M', '256#BN', '256#BN', 'M', '512#BN', '512#BN', 'M', '512#BN', '512#BN', 'M'],              
              tail : ['2048', '1024']
          }        
      },

      train : {
        epochs: 5,
        log_interval: 20,
        batch_size: 32,
        optimizer : { 
            optim : 'Adam',
            lr : 1e-4,        
        }
      }
    },

    set03 : {
      root : 'encoders_vgg_do',
      nets : {
          VGG05DO: {
              head : ['64', 'M', '128', 'M'],
              tail : ['128', 'D#0.5', '64']
          },
          VGG07D0: {
              head : ['64', 'M', '128', 'M', '256', '256', 'M'],
              tail : ['256', 'D#0.5', '128']
          },
          VGG09DO: {
              head : ['64', 'M', '128', 'M', '256', '256', 'M', '512', '512', 'M'],
              tail : ['512', 'D#0.5', '256']
          },
          VGG11DO: {
              head : ['64', 'M', '128', 'M', '256', '256', 'M', '512', '512', 'M', '512', '512', 'M'],
              tail : ['2048', 'D#0.5', '1024']
          },
          VGG13DO: {
              head : ['64', '64', 'M', '128', '128', 'M', '256', '256', 'M', '512', '512', 'M', '512', '512', 'M'],              
              tail : ['2048', 'D#0.5', '1024']
          }        
      },

      train : {
        epochs: 5,
        log_interval: 20,
        batch_size: 32,
        optimizer : { 
            optim : 'Adam',
            lr : 1e-4,        
        }
      }
    }    
}